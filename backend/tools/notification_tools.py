import os
import requests
from langchain.agents import tool
from dotenv import load_dotenv

# Carrega as vari√°veis de ambiente do arquivo .env na raiz do projeto
load_dotenv()

@tool
def notify_developer_of_missing_tool(required_analysis: str) -> str:
    """
    Use esta ferramenta como √∫ltimo recurso, somente quando voc√™ tiver certeza de que nenhuma das ferramentas existentes pode responder √† pergunta do usu√°rio.
    Esta fun√ß√£o notifica o desenvolvedor de que uma nova ferramenta √© necess√°ria para atender a uma solicita√ß√£o espec√≠fica.
    O argumento 'required_analysis' deve ser uma descri√ß√£o clara e concisa da an√°lise que o usu√°rio solicitou e que voc√™ n√£o conseguiu realizar.
    """
    print(f"ü§ñ Ferramenta 'notify_developer_of_missing_tool' chamada com a an√°lise: {required_analysis}")
    
    webhook_url = os.getenv("DISCORD_WEBHOOK_URL")
    
    if not webhook_url:
        print("üî• A vari√°vel de ambiente DISCORD_WEBHOOK_URL n√£o foi configurada.")
        return "A funcionalidade de notifica√ß√£o ao desenvolvedor n√£o est√° configurada."

    try:
        message = {
            "embeds": [
                {
                    "title": "üö® Nova Ferramenta Necess√°ria!",
                    "description": "O agente de IA identificou a necessidade de uma nova capacidade para responder a uma consulta de usu√°rio.",
                    "color": 15158332, # Cor vermelha
                    "fields": [
                        {
                            "name": "An√°lise Solicitada",
                            "value": f"```{required_analysis}```"
                        }
                    ],
                    "footer": {
                        "text": "Por favor, considere desenvolver uma nova ferramenta para atender a esta demanda."
                    }
                }
            ]
        }
        
        response = requests.post(webhook_url, json=message)
        response.raise_for_status() # Lan√ßa um erro se a requisi√ß√£o falhar (status code n√£o for 2xx)
        
        print("‚úÖ Notifica√ß√£o enviada ao Discord com sucesso.")
        return "O desenvolvedor foi notificado com sucesso sobre a necessidade da nova ferramenta. Por favor, informe ao usu√°rio que esta capacidade estar√° dispon√≠vel em breve."

    except requests.exceptions.RequestException as e:
        print(f"üî• Erro ao enviar notifica√ß√£o para o Discord: {e}")
        return "Ocorreu um erro ao tentar notificar o desenvolvedor."
    except Exception as e:
        print(f"üî• Erro inesperado na ferramenta de notifica√ß√£o: {e}")
        return "Ocorreu um erro inesperado."
